// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`function react fc 1`] = `
Object {
  "TypedInitializedFunction": Object {
    "generics": Array [
      Object {
        "name": "Props",
      },
    ],
    "kind": 11,
    "name": "TypedInitializedFunction",
    "parameters": Array [
      Object {
        "generics": Array [
          Object {
            "name": "P",
          },
        ],
        "kind": 15,
        "name": "props",
        "properties": Array [
          Object {
            "kind": 1,
            "name": "m",
            "optional": true,
            "parent": Object {
              "name": "Props",
            },
          },
          Object {
            "kind": 4,
            "name": "children",
            "optional": true,
            "parent": Object {
              "name": "PropsWithChildren",
            },
            "properties": Array [
              Object {
                "kind": 4,
                "properties": Array [
                  Object {
                    "kind": 4,
                    "name": "type",
                    "properties": Array [
                      Object {
                        "description": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
                        "kind": 4,
                        "name": "apply",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "An array of argument values to be passed to the function.",
                            "name": "args",
                          },
                        ],
                        "properties": Array [
                          Object {
                            "description": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
                            "kind": 11,
                            "name": "apply",
                            "parameters": Array [
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "An array of argument values to be passed to the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "type": "R",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                              Object {
                                "name": "R",
                              },
                            ],
                          },
                          Object {
                            "description": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
                            "kind": 11,
                            "name": "call",
                            "parameters": Array [
                              Object {
                                "name": "this",
                              },
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "Argument values to be passed to the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "type": "R",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                              Object {
                                "name": "A",
                              },
                              Object {
                                "name": "R",
                              },
                            ],
                          },
                          Object {
                            "description": "For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.",
                            "kind": 11,
                            "name": "bind",
                            "parameters": Array [
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "Arguments to bind to the parameters of the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "generics": Array [
                                Object {
                                  "type": "T",
                                },
                              ],
                              "kind": 15,
                              "type": "OmitThisParameter",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                            ],
                          },
                          Object {
                            "description": "Returns a string representation of a function.",
                            "kind": 11,
                            "name": "toString",
                            "returns": Object {
                              "kind": 1,
                            },
                          },
                          Object {
                            "kind": 17,
                            "name": "prototype",
                          },
                          Object {
                            "kind": 2,
                            "name": "length",
                            "readonly": true,
                          },
                          Object {
                            "kind": 17,
                            "name": "arguments",
                          },
                          Object {
                            "kind": 11,
                            "name": "caller",
                            "type": "Function",
                          },
                          Object {
                            "description": "Returns the name of the function. Function names are read-only and can not be changed.",
                            "kind": 1,
                            "name": "name",
                            "readonly": true,
                          },
                          Object {
                            "description": "Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.",
                            "kind": 11,
                            "name": "__@hasInstance@205",
                            "parameters": Array [
                              Object {
                                "name": "value",
                              },
                            ],
                            "returns": Object {
                              "kind": 3,
                            },
                          },
                        ],
                      },
                      Object {
                        "description": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
                        "kind": 4,
                        "name": "call",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "Argument values to be passed to the function.",
                            "name": "args",
                          },
                        ],
                        "properties": Array [
                          Object {
                            "description": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
                            "kind": 11,
                            "name": "apply",
                            "parameters": Array [
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "An array of argument values to be passed to the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "type": "R",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                              Object {
                                "name": "R",
                              },
                            ],
                          },
                          Object {
                            "description": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
                            "kind": 11,
                            "name": "call",
                            "parameters": Array [
                              Object {
                                "name": "this",
                              },
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "Argument values to be passed to the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "type": "R",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                              Object {
                                "name": "A",
                              },
                              Object {
                                "name": "R",
                              },
                            ],
                          },
                          Object {
                            "description": "For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.",
                            "kind": 11,
                            "name": "bind",
                            "parameters": Array [
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "Arguments to bind to the parameters of the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "generics": Array [
                                Object {
                                  "type": "T",
                                },
                              ],
                              "kind": 15,
                              "type": "OmitThisParameter",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                            ],
                          },
                          Object {
                            "description": "Returns a string representation of a function.",
                            "kind": 11,
                            "name": "toString",
                            "returns": Object {
                              "kind": 1,
                            },
                          },
                          Object {
                            "kind": 17,
                            "name": "prototype",
                          },
                          Object {
                            "kind": 2,
                            "name": "length",
                            "readonly": true,
                          },
                          Object {
                            "kind": 17,
                            "name": "arguments",
                          },
                          Object {
                            "kind": 11,
                            "name": "caller",
                            "type": "Function",
                          },
                          Object {
                            "description": "Returns the name of the function. Function names are read-only and can not be changed.",
                            "kind": 1,
                            "name": "name",
                            "readonly": true,
                          },
                          Object {
                            "description": "Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.",
                            "kind": 11,
                            "name": "__@hasInstance@205",
                            "parameters": Array [
                              Object {
                                "name": "value",
                              },
                            ],
                            "returns": Object {
                              "kind": 3,
                            },
                          },
                        ],
                      },
                      Object {
                        "description": "For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.",
                        "kind": 4,
                        "name": "bind",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "Arguments to bind to the parameters of the function.",
                            "name": "args",
                          },
                        ],
                        "properties": Array [
                          Object {
                            "description": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
                            "kind": 11,
                            "name": "apply",
                            "parameters": Array [
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "An array of argument values to be passed to the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "type": "R",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                              Object {
                                "name": "R",
                              },
                            ],
                          },
                          Object {
                            "description": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
                            "kind": 11,
                            "name": "call",
                            "parameters": Array [
                              Object {
                                "name": "this",
                              },
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "Argument values to be passed to the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "type": "R",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                              Object {
                                "name": "A",
                              },
                              Object {
                                "name": "R",
                              },
                            ],
                          },
                          Object {
                            "description": "For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.",
                            "kind": 11,
                            "name": "bind",
                            "parameters": Array [
                              Object {
                                "description": "The object to be used as the this object.",
                                "name": "thisArg",
                              },
                              Object {
                                "description": "Arguments to bind to the parameters of the function.",
                                "name": "args",
                              },
                            ],
                            "returns": Object {
                              "generics": Array [
                                Object {
                                  "type": "T",
                                },
                              ],
                              "kind": 15,
                              "type": "OmitThisParameter",
                            },
                            "types": Array [
                              Object {
                                "name": "T",
                              },
                            ],
                          },
                          Object {
                            "description": "Returns a string representation of a function.",
                            "kind": 11,
                            "name": "toString",
                            "returns": Object {
                              "kind": 1,
                            },
                          },
                          Object {
                            "kind": 17,
                            "name": "prototype",
                          },
                          Object {
                            "kind": 2,
                            "name": "length",
                            "readonly": true,
                          },
                          Object {
                            "kind": 17,
                            "name": "arguments",
                          },
                          Object {
                            "kind": 11,
                            "name": "caller",
                            "type": "Function",
                          },
                          Object {
                            "description": "Returns the name of the function. Function names are read-only and can not be changed.",
                            "kind": 1,
                            "name": "name",
                            "readonly": true,
                          },
                          Object {
                            "description": "Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.",
                            "kind": 11,
                            "name": "__@hasInstance@205",
                            "parameters": Array [
                              Object {
                                "name": "value",
                              },
                            ],
                            "returns": Object {
                              "kind": 3,
                            },
                          },
                        ],
                      },
                      Object {
                        "description": "Returns a string representation of a function.",
                        "kind": 11,
                        "name": "toString",
                        "returns": Object {
                          "kind": 1,
                        },
                      },
                      Object {
                        "kind": 17,
                        "name": "prototype",
                      },
                      Object {
                        "kind": 2,
                        "name": "length",
                        "readonly": true,
                      },
                      Object {
                        "kind": 17,
                        "name": "arguments",
                      },
                      Object {
                        "kind": 11,
                        "name": "caller",
                        "type": "Function",
                      },
                      Object {
                        "description": "Returns the name of the function. Function names are read-only and can not be changed.",
                        "kind": 1,
                        "name": "name",
                        "readonly": true,
                      },
                      Object {
                        "description": "Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.",
                        "kind": 11,
                        "name": "__@hasInstance@205",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                        ],
                        "returns": Object {
                          "kind": 3,
                        },
                      },
                    ],
                  },
                  Object {
                    "name": "props",
                    "type": "P",
                  },
                  Object {
                    "kind": 4,
                    "name": "key",
                    "properties": Array [
                      Object {
                        "kind": 4,
                        "properties": Array [
                          Object {
                            "kind": 1,
                          },
                          Object {
                            "kind": 2,
                          },
                        ],
                        "type": "Key",
                      },
                      Object {
                        "kind": 10,
                      },
                    ],
                  },
                  Object {
                    "description": "Gets the length of the array. This is a number one higher than the highest element defined in an array.",
                    "kind": 2,
                    "name": "length",
                    "readonly": true,
                  },
                  Object {
                    "description": "Returns a string representation of an object.",
                    "kind": 4,
                    "name": "toString",
                    "properties": Array [
                      Object {
                        "description": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
                        "kind": 11,
                        "name": "apply",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "An array of argument values to be passed to the function.",
                            "name": "args",
                          },
                        ],
                        "returns": Object {
                          "type": "R",
                        },
                        "types": Array [
                          Object {
                            "name": "T",
                          },
                          Object {
                            "name": "R",
                          },
                        ],
                      },
                      Object {
                        "description": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
                        "kind": 11,
                        "name": "call",
                        "parameters": Array [
                          Object {
                            "name": "this",
                          },
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "Argument values to be passed to the function.",
                            "name": "args",
                          },
                        ],
                        "returns": Object {
                          "type": "R",
                        },
                        "types": Array [
                          Object {
                            "name": "T",
                          },
                          Object {
                            "name": "A",
                          },
                          Object {
                            "name": "R",
                          },
                        ],
                      },
                      Object {
                        "description": "For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.",
                        "kind": 11,
                        "name": "bind",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "Arguments to bind to the parameters of the function.",
                            "name": "args",
                          },
                        ],
                        "returns": Object {
                          "generics": Array [
                            Object {
                              "type": "T",
                            },
                          ],
                          "kind": 15,
                          "type": "OmitThisParameter",
                        },
                        "types": Array [
                          Object {
                            "name": "T",
                          },
                        ],
                      },
                      Object {
                        "description": "Returns a string representation of a function.",
                        "kind": 11,
                        "name": "toString",
                        "returns": Object {
                          "kind": 1,
                        },
                      },
                      Object {
                        "kind": 17,
                        "name": "prototype",
                      },
                      Object {
                        "kind": 2,
                        "name": "length",
                        "readonly": true,
                      },
                      Object {
                        "kind": 17,
                        "name": "arguments",
                      },
                      Object {
                        "kind": 11,
                        "name": "caller",
                        "type": "Function",
                      },
                      Object {
                        "description": "Returns the name of the function. Function names are read-only and can not be changed.",
                        "kind": 1,
                        "name": "name",
                        "readonly": true,
                      },
                      Object {
                        "description": "Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.",
                        "kind": 11,
                        "name": "__@hasInstance@205",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                        ],
                        "returns": Object {
                          "kind": 3,
                        },
                      },
                    ],
                  },
                  Object {
                    "description": "Returns a date converted to a string using the current locale.",
                    "kind": 4,
                    "name": "toLocaleString",
                    "properties": Array [
                      Object {
                        "description": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
                        "kind": 11,
                        "name": "apply",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "An array of argument values to be passed to the function.",
                            "name": "args",
                          },
                        ],
                        "returns": Object {
                          "type": "R",
                        },
                        "types": Array [
                          Object {
                            "name": "T",
                          },
                          Object {
                            "name": "R",
                          },
                        ],
                      },
                      Object {
                        "description": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
                        "kind": 11,
                        "name": "call",
                        "parameters": Array [
                          Object {
                            "name": "this",
                          },
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "Argument values to be passed to the function.",
                            "name": "args",
                          },
                        ],
                        "returns": Object {
                          "type": "R",
                        },
                        "types": Array [
                          Object {
                            "name": "T",
                          },
                          Object {
                            "name": "A",
                          },
                          Object {
                            "name": "R",
                          },
                        ],
                      },
                      Object {
                        "description": "For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.",
                        "kind": 11,
                        "name": "bind",
                        "parameters": Array [
                          Object {
                            "description": "The object to be used as the this object.",
                            "name": "thisArg",
                          },
                          Object {
                            "description": "Arguments to bind to the parameters of the function.",
                            "name": "args",
                          },
                        ],
                        "returns": Object {
                          "generics": Array [
                            Object {
                              "type": "T",
                            },
                          ],
                          "kind": 15,
                          "type": "OmitThisParameter",
                        },
                        "types": Array [
                          Object {
                            "name": "T",
                          },
                        ],
                      },
                      Object {
                        "description": "Returns a string representation of a function.",
                        "kind": 11,
                        "name": "toString",
                        "returns": Object {
                          "kind": 1,
                        },
                      },
                      Object {
                        "kind": 17,
                        "name": "prototype",
                      },
                      Object {
                        "kind": 2,
                        "name": "length",
                        "readonly": true,
                      },
                      Object {
                        "kind": 17,
                        "name": "arguments",
                      },
                      Object {
                        "kind": 11,
                        "name": "caller",
                        "type": "Function",
                      },
                      Object {
                        "description": "Returns the name of the function. Function names are read-only and can not be changed.",
                        "kind": 1,
                        "name": "name",
                        "readonly": true,
                      },
                      Object {
                        "description": "Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.",
                        "kind": 11,
                        "name": "__@hasInstance@205",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                        ],
                        "returns": Object {
                          "kind": 3,
                        },
                      },
                    ],
                  },
                  Object {
                    "description": "Combines two or more arrays.",
                    "kind": 11,
                    "name": "concat",
                    "parameters": Array [
                      Object {
                        "description": "Additional items to add to the end of array1.",
                        "kind": 16,
                        "name": "items",
                        "properties": Array [
                          Object {
                            "generics": Array [
                              Object {
                                "type": "T",
                              },
                            ],
                            "kind": 16,
                            "type": "ConcatArray",
                          },
                        ],
                        "type": "Array",
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "type": "T",
                        },
                      ],
                    },
                  },
                  Object {
                    "description": "Adds all the elements of an array separated by the specified separator string.",
                    "kind": 11,
                    "name": "join",
                    "parameters": Array [
                      Object {
                        "description": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",
                        "kind": 1,
                        "name": "separator",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 1,
                    },
                  },
                  Object {
                    "description": "Returns a section of an array.",
                    "kind": 11,
                    "name": "slice",
                    "parameters": Array [
                      Object {
                        "description": "The beginning of the specified portion of the array.",
                        "kind": 2,
                        "name": "start",
                        "optional": true,
                      },
                      Object {
                        "description": "The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",
                        "kind": 2,
                        "name": "end",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "type": "T",
                        },
                      ],
                    },
                  },
                  Object {
                    "description": "Returns the index of the first occurrence of a value in an array.",
                    "kind": 11,
                    "name": "indexOf",
                    "parameters": Array [
                      Object {
                        "description": "The value to locate in the array.",
                        "kind": 17,
                        "name": "searchElement",
                        "type": "T",
                      },
                      Object {
                        "description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
                        "kind": 2,
                        "name": "fromIndex",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 2,
                    },
                  },
                  Object {
                    "description": "Returns the index of the last occurrence of a specified value in an array.",
                    "kind": 11,
                    "name": "lastIndexOf",
                    "parameters": Array [
                      Object {
                        "description": "The value to locate in the array.",
                        "kind": 17,
                        "name": "searchElement",
                        "type": "T",
                      },
                      Object {
                        "description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",
                        "kind": 2,
                        "name": "fromIndex",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 2,
                    },
                  },
                  Object {
                    "description": "Determines whether all the members of an array satisfy the specified test.",
                    "kind": 11,
                    "name": "every",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to three arguments. The every method calls
the predicate function for each element in the array until the predicate returns a value
which is coercible to the Boolean value false, or until the end of the array.",
                        "kind": 11,
                        "name": "predicate",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "kind": 17,
                          "name": "S",
                        },
                      },
                      Object {
                        "description": "An object to which the this keyword can refer in the predicate function.
If thisArg is omitted, undefined is used as the this value.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "type": "S",
                        },
                      ],
                    },
                    "types": Array [
                      Object {
                        "kind": 17,
                        "name": "S",
                      },
                    ],
                  },
                  Object {
                    "description": "Determines whether the specified callback function returns true for any element of an array.",
                    "kind": 11,
                    "name": "some",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to three arguments. The some method calls
the predicate function for each element in the array until the predicate returns a value
which is coercible to the Boolean value true, or until the end of the array.",
                        "kind": 11,
                        "name": "predicate",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "kind": 9,
                        },
                      },
                      Object {
                        "description": "An object to which the this keyword can refer in the predicate function.
If thisArg is omitted, undefined is used as the this value.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 3,
                    },
                  },
                  Object {
                    "description": "Performs the specified action for each element in an array.",
                    "kind": 11,
                    "name": "forEach",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.",
                        "kind": 11,
                        "name": "callbackfn",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "kind": 12,
                        },
                      },
                      Object {
                        "description": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 12,
                    },
                  },
                  Object {
                    "description": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
                    "kind": 11,
                    "name": "map",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.",
                        "kind": 11,
                        "name": "callbackfn",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "type": "U",
                        },
                      },
                      Object {
                        "description": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "type": "U",
                        },
                      ],
                    },
                    "types": Array [
                      Object {
                        "kind": 17,
                        "name": "U",
                      },
                    ],
                  },
                  Object {
                    "description": "Returns the elements of an array that meet the condition specified in a callback function.",
                    "kind": 11,
                    "name": "filter",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.",
                        "kind": 11,
                        "name": "predicate",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "kind": 17,
                          "name": "S",
                        },
                      },
                      Object {
                        "description": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "type": "S",
                        },
                      ],
                    },
                    "types": Array [
                      Object {
                        "kind": 17,
                        "name": "S",
                      },
                    ],
                  },
                  Object {
                    "description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
                    "kind": 11,
                    "name": "reduce",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.",
                        "kind": 11,
                        "name": "callbackfn",
                        "parameters": Array [
                          Object {
                            "name": "previousValue",
                          },
                          Object {
                            "name": "currentValue",
                          },
                          Object {
                            "name": "currentIndex",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "type": "T",
                        },
                      },
                    ],
                    "returns": Object {
                      "type": "T",
                    },
                  },
                  Object {
                    "description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
                    "kind": 11,
                    "name": "reduceRight",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.",
                        "kind": 11,
                        "name": "callbackfn",
                        "parameters": Array [
                          Object {
                            "name": "previousValue",
                          },
                          Object {
                            "name": "currentValue",
                          },
                          Object {
                            "name": "currentIndex",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "type": "T",
                        },
                      },
                    ],
                    "returns": Object {
                      "type": "T",
                    },
                  },
                  Object {
                    "description": "Returns the value of the first element in the array where predicate is true, and undefined
otherwise.",
                    "kind": 11,
                    "name": "find",
                    "parameters": Array [
                      Object {
                        "description": "find calls predicate once for each element of the array, in ascending
order, until it finds one where predicate returns true. If such an element is found, find
immediately returns that element value. Otherwise, find returns undefined.",
                        "kind": 11,
                        "name": "predicate",
                        "parameters": Array [
                          Object {
                            "name": "this",
                          },
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "obj",
                          },
                        ],
                        "returns": Object {
                          "kind": 17,
                          "name": "S",
                        },
                      },
                      Object {
                        "description": "If provided, it will be used as the this value for each invocation of
predicate. If it is not provided, undefined is used instead.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 4,
                      "properties": Array [
                        Object {
                          "type": "S",
                        },
                        Object {
                          "kind": 8,
                        },
                      ],
                    },
                    "types": Array [
                      Object {
                        "kind": 17,
                        "name": "S",
                      },
                    ],
                  },
                  Object {
                    "description": "Returns the index of the first element in the array where predicate is true, and -1
otherwise.",
                    "kind": 11,
                    "name": "findIndex",
                    "parameters": Array [
                      Object {
                        "description": "find calls predicate once for each element of the array, in ascending
order, until it finds one where predicate returns true. If such an element is found,
findIndex immediately returns that element index. Otherwise, findIndex returns -1.",
                        "kind": 11,
                        "name": "predicate",
                        "parameters": Array [
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "obj",
                          },
                        ],
                        "returns": Object {
                          "kind": 9,
                        },
                      },
                      Object {
                        "description": "If provided, it will be used as the this value for each invocation of
predicate. If it is not provided, undefined is used instead.",
                        "kind": 17,
                        "name": "thisArg",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 2,
                    },
                  },
                  Object {
                    "description": "Returns an iterable of key, value pairs for every entry in the array",
                    "kind": 11,
                    "name": "entries",
                    "returns": Object {
                      "generics": Array [
                        Object {
                          "kind": 6,
                          "properties": Array [
                            Object {
                              "kind": 2,
                            },
                            Object {
                              "type": "T",
                            },
                          ],
                        },
                      ],
                      "kind": 14,
                      "type": "IterableIterator",
                    },
                  },
                  Object {
                    "description": "Returns an iterable of keys in the array",
                    "kind": 11,
                    "name": "keys",
                    "returns": Object {
                      "generics": Array [
                        Object {
                          "kind": 2,
                        },
                      ],
                      "kind": 14,
                      "type": "IterableIterator",
                    },
                  },
                  Object {
                    "description": "Returns an iterable of values in the array",
                    "kind": 11,
                    "name": "values",
                    "returns": Object {
                      "generics": Array [
                        Object {
                          "type": "T",
                        },
                      ],
                      "kind": 14,
                      "type": "IterableIterator",
                    },
                  },
                  Object {
                    "description": "Determines whether an array includes a certain element, returning true or false as appropriate.",
                    "kind": 11,
                    "name": "includes",
                    "parameters": Array [
                      Object {
                        "description": "The element to search for.",
                        "kind": 17,
                        "name": "searchElement",
                        "type": "T",
                      },
                      Object {
                        "description": "The position in this array at which to begin searching for searchElement.",
                        "kind": 2,
                        "name": "fromIndex",
                        "optional": true,
                      },
                    ],
                    "returns": Object {
                      "kind": 3,
                    },
                  },
                  Object {
                    "description": "Calls a defined callback function on each element of an array. Then, flattens the result into
a new array.
This is identical to a map followed by flat with depth 1.",
                    "kind": 11,
                    "name": "flatMap",
                    "parameters": Array [
                      Object {
                        "description": "A function that accepts up to three arguments. The flatMap method calls the
callback function one time for each element in the array.",
                        "kind": 11,
                        "name": "callback",
                        "parameters": Array [
                          Object {
                            "name": "this",
                          },
                          Object {
                            "name": "value",
                          },
                          Object {
                            "name": "index",
                          },
                          Object {
                            "name": "array",
                          },
                        ],
                        "returns": Object {
                          "kind": 4,
                          "properties": Array [
                            Object {
                              "type": "U",
                            },
                            Object {
                              "generics": Array [
                                Object {
                                  "type": "U",
                                },
                              ],
                              "kind": 16,
                              "type": "ReadonlyArray",
                            },
                          ],
                        },
                      },
                      Object {
                        "description": "An object to which the this keyword can refer in the callback function. If
thisArg is omitted, undefined is used as the this value.",
                        "name": "thisArg",
                        "optional": true,
                        "type": "This",
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "type": "U",
                        },
                      ],
                    },
                    "types": Array [
                      Object {
                        "kind": 17,
                        "name": "U",
                      },
                      Object {
                        "kind": 17,
                        "name": "This",
                      },
                    ],
                  },
                  Object {
                    "description": "Returns a new array with all sub-array elements concatenated into it recursively up to the
specified depth.",
                    "kind": 11,
                    "name": "flat",
                    "parameters": Array [
                      Object {
                        "kind": 17,
                        "name": "this",
                        "type": "A",
                      },
                      Object {
                        "description": "The maximum recursion depth",
                        "name": "depth",
                        "optional": true,
                        "type": "D",
                      },
                    ],
                    "returns": Object {
                      "kind": 16,
                      "properties": Array [
                        Object {
                          "generics": Array [
                            Object {
                              "type": "A",
                            },
                            Object {
                              "type": "D",
                            },
                          ],
                          "kind": 15,
                          "type": "FlatArray",
                        },
                      ],
                    },
                    "types": Array [
                      Object {
                        "kind": 17,
                        "name": "A",
                      },
                      Object {
                        "kind": 17,
                        "name": "D",
                      },
                    ],
                  },
                  Object {
                    "description": "Iterator of values in the array.",
                    "kind": 11,
                    "name": "__@iterator@255",
                    "returns": Object {
                      "generics": Array [
                        Object {
                          "type": "T",
                        },
                      ],
                      "kind": 14,
                      "type": "IterableIterator",
                    },
                  },
                  Object {
                    "kind": 4,
                    "name": "children",
                    "properties": Array [
                      Object {
                        "kind": 4,
                        "name": "type",
                        "properties": Array [
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                        ],
                      },
                      Object {
                        "name": "props",
                        "type": "P",
                      },
                      Object {
                        "kind": 4,
                        "name": "key",
                        "properties": Array [
                          Object {
                            "kind": 15,
                            "type": "Key",
                          },
                          Object {
                            "kind": 10,
                          },
                        ],
                      },
                      Object {
                        "description": "Gets the length of the array. This is a number one higher than the highest element defined in an array.",
                        "kind": 2,
                        "name": "length",
                        "readonly": true,
                      },
                      Object {
                        "description": "Returns a string representation of an object.",
                        "kind": 4,
                        "name": "toString",
                        "properties": Array [
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                        ],
                      },
                      Object {
                        "description": "Returns a date converted to a string using the current locale.",
                        "kind": 4,
                        "name": "toLocaleString",
                        "properties": Array [
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                        ],
                      },
                      Object {
                        "description": "Combines two or more arrays.",
                        "kind": 11,
                        "name": "concat",
                        "parameters": Array [
                          Object {
                            "description": "Additional items to add to the end of array1.",
                            "name": "items",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "type": "T",
                            },
                          ],
                        },
                      },
                      Object {
                        "description": "Adds all the elements of an array separated by the specified separator string.",
                        "kind": 11,
                        "name": "join",
                        "parameters": Array [
                          Object {
                            "description": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",
                            "name": "separator",
                          },
                        ],
                        "returns": Object {
                          "kind": 1,
                        },
                      },
                      Object {
                        "description": "Returns a section of an array.",
                        "kind": 11,
                        "name": "slice",
                        "parameters": Array [
                          Object {
                            "description": "The beginning of the specified portion of the array.",
                            "name": "start",
                          },
                          Object {
                            "description": "The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",
                            "name": "end",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "type": "T",
                            },
                          ],
                        },
                      },
                      Object {
                        "description": "Returns the index of the first occurrence of a value in an array.",
                        "kind": 11,
                        "name": "indexOf",
                        "parameters": Array [
                          Object {
                            "description": "The value to locate in the array.",
                            "name": "searchElement",
                          },
                          Object {
                            "description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
                            "name": "fromIndex",
                          },
                        ],
                        "returns": Object {
                          "kind": 2,
                        },
                      },
                      Object {
                        "description": "Returns the index of the last occurrence of a specified value in an array.",
                        "kind": 11,
                        "name": "lastIndexOf",
                        "parameters": Array [
                          Object {
                            "description": "The value to locate in the array.",
                            "name": "searchElement",
                          },
                          Object {
                            "description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",
                            "name": "fromIndex",
                          },
                        ],
                        "returns": Object {
                          "kind": 2,
                        },
                      },
                      Object {
                        "description": "Determines whether all the members of an array satisfy the specified test.",
                        "kind": 11,
                        "name": "every",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to three arguments. The every method calls
the predicate function for each element in the array until the predicate returns a value
which is coercible to the Boolean value false, or until the end of the array.",
                            "name": "predicate",
                          },
                          Object {
                            "description": "An object to which the this keyword can refer in the predicate function.
If thisArg is omitted, undefined is used as the this value.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "type": "S",
                            },
                          ],
                        },
                        "types": Array [
                          Object {
                            "name": "S",
                          },
                        ],
                      },
                      Object {
                        "description": "Determines whether the specified callback function returns true for any element of an array.",
                        "kind": 11,
                        "name": "some",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to three arguments. The some method calls
the predicate function for each element in the array until the predicate returns a value
which is coercible to the Boolean value true, or until the end of the array.",
                            "name": "predicate",
                          },
                          Object {
                            "description": "An object to which the this keyword can refer in the predicate function.
If thisArg is omitted, undefined is used as the this value.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 3,
                        },
                      },
                      Object {
                        "description": "Performs the specified action for each element in an array.",
                        "kind": 11,
                        "name": "forEach",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.",
                            "name": "callbackfn",
                          },
                          Object {
                            "description": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 12,
                        },
                      },
                      Object {
                        "description": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
                        "kind": 11,
                        "name": "map",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.",
                            "name": "callbackfn",
                          },
                          Object {
                            "description": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "type": "U",
                            },
                          ],
                        },
                        "types": Array [
                          Object {
                            "name": "U",
                          },
                        ],
                      },
                      Object {
                        "description": "Returns the elements of an array that meet the condition specified in a callback function.",
                        "kind": 11,
                        "name": "filter",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.",
                            "name": "predicate",
                          },
                          Object {
                            "description": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "type": "S",
                            },
                          ],
                        },
                        "types": Array [
                          Object {
                            "name": "S",
                          },
                        ],
                      },
                      Object {
                        "description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
                        "kind": 11,
                        "name": "reduce",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.",
                            "name": "callbackfn",
                          },
                        ],
                        "returns": Object {
                          "type": "T",
                        },
                      },
                      Object {
                        "description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
                        "kind": 11,
                        "name": "reduceRight",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.",
                            "name": "callbackfn",
                          },
                        ],
                        "returns": Object {
                          "type": "T",
                        },
                      },
                      Object {
                        "description": "Returns the value of the first element in the array where predicate is true, and undefined
otherwise.",
                        "kind": 11,
                        "name": "find",
                        "parameters": Array [
                          Object {
                            "description": "find calls predicate once for each element of the array, in ascending
order, until it finds one where predicate returns true. If such an element is found, find
immediately returns that element value. Otherwise, find returns undefined.",
                            "name": "predicate",
                          },
                          Object {
                            "description": "If provided, it will be used as the this value for each invocation of
predicate. If it is not provided, undefined is used instead.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 4,
                          "properties": Array [
                            Object {
                              "type": "S",
                            },
                            Object {
                              "kind": 8,
                            },
                          ],
                        },
                        "types": Array [
                          Object {
                            "name": "S",
                          },
                        ],
                      },
                      Object {
                        "description": "Returns the index of the first element in the array where predicate is true, and -1
otherwise.",
                        "kind": 11,
                        "name": "findIndex",
                        "parameters": Array [
                          Object {
                            "description": "find calls predicate once for each element of the array, in ascending
order, until it finds one where predicate returns true. If such an element is found,
findIndex immediately returns that element index. Otherwise, findIndex returns -1.",
                            "name": "predicate",
                          },
                          Object {
                            "description": "If provided, it will be used as the this value for each invocation of
predicate. If it is not provided, undefined is used instead.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 2,
                        },
                      },
                      Object {
                        "description": "Returns an iterable of key, value pairs for every entry in the array",
                        "kind": 11,
                        "name": "entries",
                        "returns": Object {
                          "generics": Array [
                            Object {
                              "kind": 6,
                              "properties": Array [
                                Object {
                                  "kind": 2,
                                },
                                Object {
                                  "type": "T",
                                },
                              ],
                            },
                          ],
                          "kind": 14,
                          "type": "IterableIterator",
                        },
                      },
                      Object {
                        "description": "Returns an iterable of keys in the array",
                        "kind": 11,
                        "name": "keys",
                        "returns": Object {
                          "generics": Array [
                            Object {
                              "kind": 2,
                            },
                          ],
                          "kind": 14,
                          "type": "IterableIterator",
                        },
                      },
                      Object {
                        "description": "Returns an iterable of values in the array",
                        "kind": 11,
                        "name": "values",
                        "returns": Object {
                          "generics": Array [
                            Object {
                              "type": "T",
                            },
                          ],
                          "kind": 14,
                          "type": "IterableIterator",
                        },
                      },
                      Object {
                        "description": "Determines whether an array includes a certain element, returning true or false as appropriate.",
                        "kind": 11,
                        "name": "includes",
                        "parameters": Array [
                          Object {
                            "description": "The element to search for.",
                            "name": "searchElement",
                          },
                          Object {
                            "description": "The position in this array at which to begin searching for searchElement.",
                            "name": "fromIndex",
                          },
                        ],
                        "returns": Object {
                          "kind": 3,
                        },
                      },
                      Object {
                        "description": "Calls a defined callback function on each element of an array. Then, flattens the result into
a new array.
This is identical to a map followed by flat with depth 1.",
                        "kind": 11,
                        "name": "flatMap",
                        "parameters": Array [
                          Object {
                            "description": "A function that accepts up to three arguments. The flatMap method calls the
callback function one time for each element in the array.",
                            "name": "callback",
                          },
                          Object {
                            "description": "An object to which the this keyword can refer in the callback function. If
thisArg is omitted, undefined is used as the this value.",
                            "name": "thisArg",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "type": "U",
                            },
                          ],
                        },
                        "types": Array [
                          Object {
                            "name": "U",
                          },
                          Object {
                            "name": "This",
                          },
                        ],
                      },
                      Object {
                        "description": "Returns a new array with all sub-array elements concatenated into it recursively up to the
specified depth.",
                        "kind": 11,
                        "name": "flat",
                        "parameters": Array [
                          Object {
                            "name": "this",
                          },
                          Object {
                            "description": "The maximum recursion depth",
                            "name": "depth",
                          },
                        ],
                        "returns": Object {
                          "kind": 16,
                          "properties": Array [
                            Object {
                              "generics": Array [
                                Object {
                                  "type": "A",
                                },
                                Object {
                                  "type": "D",
                                },
                              ],
                              "kind": 15,
                              "type": "FlatArray",
                            },
                          ],
                        },
                        "types": Array [
                          Object {
                            "name": "A",
                          },
                          Object {
                            "name": "D",
                          },
                        ],
                      },
                      Object {
                        "description": "Iterator of values in the array.",
                        "kind": 11,
                        "name": "__@iterator@255",
                        "returns": Object {
                          "generics": Array [
                            Object {
                              "type": "T",
                            },
                          ],
                          "kind": 14,
                          "type": "IterableIterator",
                        },
                      },
                      Object {
                        "kind": 4,
                        "name": "children",
                        "properties": Array [
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                          Object {},
                        ],
                      },
                    ],
                  },
                ],
                "type": "ReactNode",
              },
              Object {
                "kind": 8,
              },
            ],
          },
        ],
        "type": "PropsWithChildren",
      },
    ],
    "properties": Array [
      Object {
        "kind": 4,
        "name": "propTypes",
        "optional": true,
        "parent": Object {
          "name": "FunctionComponent",
        },
        "properties": Array [
          Object {
            "generics": Array [
              Object {
                "name": "T",
              },
            ],
            "kind": 15,
            "name": "WeakValidationMap",
            "type": "WeakValidationMap",
          },
          Object {
            "kind": 8,
          },
        ],
      },
      Object {
        "kind": 4,
        "name": "contextTypes",
        "optional": true,
        "parent": Object {
          "name": "FunctionComponent",
        },
        "properties": Array [
          Object {
            "generics": Array [
              Object {
                "name": "T",
              },
            ],
            "kind": 15,
            "name": "ValidationMap",
            "type": "ValidationMap",
          },
          Object {
            "kind": 8,
          },
        ],
      },
      Object {
        "kind": 4,
        "name": "defaultProps",
        "optional": true,
        "parent": Object {
          "name": "FunctionComponent",
        },
        "properties": Array [
          Object {
            "generics": Array [
              Object {
                "type": "P",
              },
            ],
            "kind": 15,
            "type": "Partial",
          },
          Object {
            "kind": 8,
          },
        ],
      },
      Object {
        "kind": 4,
        "name": "displayName",
        "optional": true,
        "parent": Object {
          "name": "FunctionComponent",
        },
        "properties": Array [
          Object {
            "kind": 1,
          },
          Object {
            "kind": 8,
          },
        ],
      },
    ],
    "returns": Object {
      "kind": 12,
    },
    "type": "FC",
  },
}
`;
