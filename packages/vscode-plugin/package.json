{
  "name": "@structured-types/vscode-plugin",
  "publisher": "atanasster",
  "version": "3.31.0",
  "description": "VSCode plugin to display structured type documentation",
  "keywords": [
    "structured-types",
    "vscode",
    "typescript"
  ],
  "engines": {
    "vscode": "^1.50.0"
  },
  "main": "dist/extension.js",
  "typings": "dist/extension/extension.d.ts",
  "files": [
    "dist/",
    "package.json",
    "README.md"
  ],
  "scripts": {
    "vscode:prepublish": "yarn build",
    "copy-toolkit": "copyfiles -f \"../../node_modules/@vscode/webview-ui-toolkit/dist/toolkit.js\" ./dist/",
    "postinstall": "node ../../node_modules/vscode/bin/install",
    "build": "tsc -p tsconfig.json && yarn copy-toolkit",
    "dev": "tsc -w -p tsconfig.json",
    "docs": "api-readme",
    "lint": "yarn eslint . --ext ts,tsx",
    "fix": "yarn lint --fix",
    "clean": "rimraf dist coverage"
  },
  "homepage": "https://github.com/ccontrols/structured-types",
  "bugs": {
    "url": "https://github.com/ccontrols/structured-types/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ccontrols/structured-types.git",
    "directory": "packages/ts-playground-plugin"
  },
  "license": "MIT",
  "dependencies": {
    "@structured-types/api": "^3.31.0",
    "@structured-types/api-docs": "^3.31.0",
    "@structured-types/prop-types-plugin": "^3.31.0",
    "@structured-types/react-plugin": "^3.31.0",
    "@vscode/webview-ui-toolkit": "^0.8.2",
    "deepmerge": "^4.2.2",
    "vscode": "^1.1.37"
  },
  "devDependencies": {
    "@types/node": "^16.3.3",
    "copyfiles": "^2.4.1"
  },
  "activationEvents": [
    "onCommand:structured-types.openPreview",
    "onCommand:structured-types.refresh",
    "onCommand:structured-types.openPreviewSide"
  ],
  "contributes": {
    "commands": [
      {
        "command": "structured-types.openPreview",
        "title": "%structured-types.openPreview.title%",
        "category": "Documentation"
      },
      {
        "command": "structured-types.openPreviewSide",
        "title": "%structured-types.openPreviewSide.title%",
        "category": "Documentation",
        "icon": "$(open-preview)"
      },
      {
        "command": "structured-types.refresh",
        "title": "%structured-types.refresh.title%",
        "category": "Documentation",
        "icon": "$(open-preview)"
      }
    ],
    "keybindings": [
      {
        "command": "structured-types.openPreview",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "(editorLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact) && !notebookEditorFocused"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "structured-types.openPreview",
          "when": "resourceLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "structured-types.openPreviewSide",
          "when": "(editorLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact) && !notebookEditorFocused",
          "alt": "structured-types.openPreview",
          "group": "navigation"
        },
        {
          "command": "structured-types.refresh",
          "when": "documentation_view_active",
          "group": "1_documentation"
        }
      ],
      "editor/title/context": [
        {
          "command": "structured-types.openPreview",
          "when": "resourceLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact",
          "group": "1_open"
        },
        {
          "command": "structured-types.openPreviewSide",
          "when": "resourceLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact",
          "group": "1_open"
        },
        {
          "command": "structured-types.refresh",
          "when": "documentation_view_active",
          "group": "1_open"
        }
      ],
      "commandPalette": [
        {
          "command": "structured-types.openPreview",
          "when": "(resourceLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact) && !notebookEditorFocused",
          "group": "navigation"
        },
        {
          "command": "structured-types.openPreviewSide",
          "when": "(resourceLangId == typescript || resourceLangId == typescriptreact || resourceLangId == javascript || resourceLangId == javascriptreact) && !notebookEditorFocused",
          "group": "navigation"
        },
        {
          "command": "structured-types.refresh",
          "when": "documentation_view_active"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Structured Documentation",
      "properties": {
        "structured-types.singlePage": {
          "description": "Open only one documentation page, instead a new one for every file.",
          "default": true,
          "type": "boolean"
        },
        "structured-types.autoShowDocumentation": {
          "description": "Automatically show a documentation page of the code being edited.",
          "default": false,
          "type": "boolean"
        },
        "structured-types.collapsed": {
          "description": "List of type names, that should not be expanded. or example, some internal React objects can be kept just as a string and will not be detailed in the documentation, instead of listing their internal properties.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "default": []
        },
        "structured-types.visible": {
          "description": "List of type names, that should be \"visible\". This will limit which of the parsed props to be documented.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "default": []
        },
        "structured-types.extensions": {
          "description": "List of plugins (or extensions). For example, for a react library, you can specify to include only react components, but not any additional types or utilities.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "react",
              "react-prop-types"
            ]
          },
          "uniqueItems": true,
          "default": []
        },
        "structured-types.columns": {
          "markdownDescription": "List of the columns in the property tables `name` | `type` | `parents` | `default` | `description`. By default, all columns will be visible.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "name",
              "type",
              "parents",
              "default",
              "description"
            ]
          },
          "uniqueItems": true,
          "default": []
        },
        "structured-types.sections": {
          "markdownDescription": "List of the sections to generate  `title` | `type` |`description` | `location` | `extends` | `props` | `examples`. By default, all sections are generated.",
          "type": "object",
          "properties": {
            "title": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": null
                }
              }
            },
            "type": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": null
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": null
                }
              }
            },
            "location": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": null
                }
              }
            },
            "extends": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": "extends"
                }
              }
            },
            "props": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": "properties"
                }
              }
            },
            "examples": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "default": false
                },
                "title": {
                  "type": [
                    "string",
                    null
                  ],
                  "default": "examples"
                }
              }
            }
          },
          "uniqueItems": true,
          "default": []
        },
        "structured-types.skipInherited": {
          "description": "Whether to skip properties that are \"inherited\", or \"composed\"",
          "default": false,
          "type": "boolean"
        }
      }
    }
  },
  "author": {
    "name": "Atanas Stoyanov",
    "email": "atanasster@gmail.com",
    "url": "https://github.com/ccontrols"
  },
  "publishConfig": {
    "access": "public"
  }
}
